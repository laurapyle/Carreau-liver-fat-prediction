install.packages("pander")
library(pander)
library(pROC)
install.packages("pROC")
install.packages("OptimalCutpoints")
install.packages("caret")
install.packages("rms")
install.packages("ElemStatLearn")
# read  data
valid <- read.csv("H:\\Endocrinology\\Green\\Carreau liver fat prediction\\Data\\Validation cohort\\validation_cohort.csv")
# read  data
valid <- read.csv("H:\\Endocrinology\\Green\\Carreau liver fat prediction\\Data\\Validation cohort\\validation cohort.csv")
# create HS variable
valid$HS <- ifelse(valid$Liver.Fat>5.5,1,0)
View(valid)
valid_mod <- glm(HS ~ bmi.percentile + Waist.circumference + ALT + SHBG, data=pred,family=binomial(link="logit"))
valid_mod <- glm(HS ~ bmi.percentile + Waist.circumference + ALT + SHBG, data=valid,family=binomial(link="logit"))
valid_mod <- glm(HS ~ BMI.percentile + Waist.circumference + ALT + SHBG, data=valid,family=binomial(link="logit"))
tabx <- mod_tablog(valid_mod)
source('C:/Users/pylell/Documents/GitHub/Functions/01_functions.R')
tabx <- mod_tablog(valid_mod)
tabx
dd <- datadist(valid)
library(tidyr)
library(magrittr)
library(dplyr)
library(data.table)
library(knitr)
library(pander)
library(pROC)
library(OptimalCutpoints)
library(caret)
library(rms)
dd <- datadist(valid)
options(datadist="dd")
valid_mod_lrm <- lrm(HS ~ BMI.percentile + Waist.circumference + ALT + SHBG, data=valid)
v <- validate(valid_mod_lrm, B=200, bw=TRUE)
valid_mod_lrm <- lrm(HS ~ BMI.percentile + Waist.circumference + ALT + SHBG, data=valid,x=TRUE,y=TRUE)
v <- validate(valid_mod_lrm, B=200, bw=TRUE)
print(v)
valid$pred <- predict(valid_mod,type="response",data.frame=valid)
table(valid$HS,valid$pred)
# using the cutoff from our previous model, if probability>0.4399669, assign as predicted to have HS
valid$pred_HS <- ifelse(valid$pred>0.4399669,1,0)
table(valid$HS,valid$pred_HS)
# confusion matrix
conf <- confusionMatrix(as.factor(valid$pred_HS),as.factor(valid$HS),positive='1')
conf
names(conf)
conf$table
conf$overall
conf$byClass
conf$mode
conf$dots
x <- as.matrix.confusionMatrix(conf)
x <- as.matrix(conf)
x
as.matrix(conf,what="overall")
as.matrix(conf,what="classes")
x <- as.matrix(conf)
y <- as.matrix(conf,what="overall")
z <- as.matrix(conf,what="classes")
x
dim(x)
row.names(x) <- c("Predicted no HS","Predicted HS")
x
colnames(x) <- c("Observed no HS","Observed HS")
x
yz <- rbind(y,z)
source('C:/Users/pylell/Documents/GitHub/Functions/01_functions.R')
library(tidyr)
library(magrittr)
library(dplyr)
library(data.table)
library(knitr)
library(pander)
library(pROC)
library(OptimalCutpoints)
library(caret)
library(rms)
set.seed(3654)
# read  data
pred <- read.csv("H:\\Endocrinology\\Green\\Carreau liver fat prediction\\Data\\NAFLD prediction score data.csv")
# read  data
pred <- read.csv("H:\\Endocrinology\\Green\\PCOS liver fat prediction\\Data\\NAFLD prediction score data.csv")
pred[pred=="."] <- NA
# remove missing observations
pred <- pred %>% drop_na(HS,liver.fat.perc,bmi.perc,Waist_cm,HOMA,HDL,TG,ALT,Free.Testosterone,SHBG)
N <- nrow(distinct(pred,ID))
# calculate testosterone and TG in European units
# testosterone was ng/dL, convert to nmol/L
pred$test_nmol <- pred$Free.Testosterone*28.818444
# TG was mg/dL to mmol/L
pred$tg_mmol <- pred$TG*88.495575
#install.packages("ElemStatLearn", dependencies=T)
library(ElemStatLearn)
library(rpart)
library(rms)
# fit full logistic regression model
f <- lrm(HS ~ bmi.perc + Waist_cm + HOMA + HDL + TG + ALT + Free.Testosterone + SHBG, data=pred)
print(f,latex=TRUE)
s <- f$stats
gamma.hat <- (s['Model L.R.'] - s['d.f.'])/s['Model L.R.']
# see p. 279 of Harrel book - gamma hat means this model will validate on new data
# about 25% worse than on this dataset
# validate full logistic regression model
f <- update(f,x=TRUE,y=TRUE)
vfull <- validate(f, B=200, bw=TRUE)
print(vfull)
newf <- glm(HS ~ bmi.perc + Waist_cm + HOMA + HDL + TG + ALT + Free.Testosterone + SHBG, data=pred,family=binomial(link="logit"))
tab1<-mod_tablog(newf)
# OR and 95% CI
newf
coef(newf)
exp(coef(newf))
# OR and 95% CI
newf_or <- exp(cbind(OR = coef(newf), confint(newf)))
newf_or
tab1
help(modtab_log)
help(mod_tablog)
source('C:/Users/pylell/Documents/GitHub/Functions/01_functions.R')
tab1<-mod_tablog(newf)
tab1
